@page "/warehouse"
@using EmployeeClient.Models
@using EmployeeClient.Data
@inject IWarehouseProductService WarehouseProductService
@inject IWPJoinService WPJoinService
@inject NavigationManager NavigationManager



<i class="material-icons"> store </i> Select Store:
<select class="btn-dark" style="padding: 5px; width:337px; " @bind="store">
    <option selected disabled hidden>Select Store..</option>
    <option>Horsens</option>
    <option>Aalborg</option>
    <option>Frederiksberg</option>
</select>


<div>
    <button class="btn btn-outline-success" @onclick="NavigateToOrderFromStore"><i class="material-icons"> store </i>Order product from store</button>
    <button class="btn btn-outline-success" @onclick="NavigateToOrderFromManufacturer"> <i class="material-icons"> business </i>Order product from manufacturer</button>

</div>





@if (getChosenStoreId() == 0)
{
    <table class="table cartTable">
        <thead class="cartThead">
            <tr>
                <th>StoreId</th>
                <th>ProductId</th>
                <th>Quantity</th>
                <th>Title</th>
                <th>Category</th>
                <th>Price</th>

            </tr>
        </thead>
        <tbody class="cartTbody">
            @foreach (var product in warehouseProducts)
            {
                <tr>
                    <td>@product.warehouseProduct.storeId</td>
                    <td>@product.warehouseProduct.productId</td>
                    <td>@product.warehouseProduct.quantity</td>
                    <td>@product.product.Title</td>
                    <td>@product.product.Category</td>
                    <td>@product.product.Price DKK</td>


                </tr>
            }
        </tbody>
    </table>
}
else
{

    if (getChosenStoreId() == 1)
    {
        storeWarehouseProducts = horsensWarehouseProducts;
    }
    else if (getChosenStoreId() == 2)
    {
        storeWarehouseProducts = aalborgWarehouseProducts;
    }
    else if (getChosenStoreId() == 3)
    {
        storeWarehouseProducts = frederiksbergWarehouseProducts;
    }

    <table class="table cartTable">
        <thead class="cartThead">
            <tr>
                <th>StoreId</th>
                <th>ProductId</th>
                <th>Quantity</th>
                <th>Title</th>
                <th>Category</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody class="cartTbody">
            @foreach (var product in storeWarehouseProducts)
            {
                <tr>
                    <td>@product.warehouseProduct.storeId</td>
                    <td>@product.warehouseProduct.productId</td>
                    <td>@product.warehouseProduct.quantity</td>
                    <td>@product.product.Title</td>
                    <td>@product.product.Category</td>
                    <td>@product.product.Price DKK</td>
                </tr>
            }
        </tbody>
    </table>
}
    }


@code {

    private String store = "";
    private List<WPJoin> warehouseProducts;
    private List<WPJoin> storeWarehouseProducts = new List<WPJoin>();
    private List<WPJoin> horsensWarehouseProducts;
    private List<WPJoin> aalborgWarehouseProducts;
    private List<WPJoin> frederiksbergWarehouseProducts;
    protected async override Task OnInitializedAsync()
    {
        warehouseProducts = new List<WPJoin>();
        warehouseProducts = await WPJoinService.GetAllWPJoinAsync();

        horsensWarehouseProducts = new List<WPJoin>();
        horsensWarehouseProducts = await WPJoinService.GetStoreWPJoinAsync(1);
        aalborgWarehouseProducts = new List<WPJoin>();
        aalborgWarehouseProducts = await WPJoinService.GetStoreWPJoinAsync(2);
        frederiksbergWarehouseProducts = new List<WPJoin>();
        frederiksbergWarehouseProducts = await WPJoinService.GetStoreWPJoinAsync(3);

    }
    private void NavigateToOrderFromStore()
    {
        NavigationManager.NavigateTo("/orderProduct");
    }
    private void NavigateToOrderFromManufacturer()
    {
        NavigationManager.NavigateTo("/orderP");
    }

    private int getChosenStoreId()
    {
        if (store.Equals("Horsens"))
        {
            return 1;
        }
        else if (store.Equals("Aalborg"))
        {
            return 2;
        }
        else if (store.Equals("Frederiksberg"))
        {
            return 3;
        }
        return 0;
    }


}
