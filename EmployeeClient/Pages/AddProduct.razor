@page "/AddProduct"
@using EmployeeClient.Models
@using EmployeeClient.Data
@using System.ComponentModel.DataAnnotations
@using System.IO
@using Microsoft.AspNetCore.Components.Forms
@inject IProductService ProductService
@inject NavigationManager NavigationManager
<h3>AddProduct</h3>

<EditForm Model="@newProduct" OnValidSubmit="@AddNewProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">

        <div class="row">

            <div class="col">


                <label> Titile:</label>
                <InputText @bind-Value="newProduct.Title" />

                <label> Category</label>
                <InputText @bind-Value="newProduct.Category" />


                <label> Description:</label>
                <InputText @bind-Value="newProduct.Description" />

                <label> Price </label>
                <InputNumber @bind-Value="newProduct.Price" />

                <div class="form-group">
                    <input type="file" @ref="inputReference" multiple />
                </div>  
                <button class="btn btn-block btn-success">Upload File</button>

                @if (!string.IsNullOrWhiteSpace(message))
                {
                    <div class="alert alert-success">
                        Image has been uploaded
                    </div>
                }

            </div>
            <p class="actions">
                <button class="btn btn-outline-dark" type="submit">Create</button>
            </p>
        </div>

    </div>

</EditForm>

@code {
    private Product newProduct = new Product();

    ElementReference[] inputReference;

    private async Task AddNewProduct()
    {
        await ProductService.AddProductAsync(newProduct);
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {

    }
}
